OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.303063-03:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-35c51f4.5nmt6nzaisjytdsypf4yqg3zp', '77' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLAbstractElement			},			#name : #'gtInspectorSourceIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorSourceIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite text\r\t\ttitle: \'Source\';\r\t\tdisplay: [ self sourceCode ]',			#stamp : 'AlexandreBergel 1/9/2019 10:25',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLAbstractElement			},			#name : #'gtInspectorSourceIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorSourceIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite text\r\t\ttitle: \'Source\';\r\t\tformat: [ :a | a asText ];\r\t\tdisplay: [ self sourceCode ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.310887-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #buildView,			#protocol : #visualizations,			#sourceCode : 'buildView\r\t| filter |\r\tfilter := RTFilterInView new.\r\tfilter spawnBlock: [ :someElements | \r\t\t| umlModel |\r\t\tumlModel := UMLModel new.\r\t\t\r\t\tumlModel elements addAll: ((someElements reject: #hasNestedElements) collect: #model).\r\t\tumlModel packages addAll: ((someElements select: #hasNestedElements) collect: #model).\r\t\tumlModel roles addAll: (umlModel elements collect: #role as: Set) asArray.\r\t\tumlModel projectRootFilename: self projectRootFilename.\r\t\tumlModel\r\t].\r\t\r\t^ RTView new @ RTDraggableView @ RTHighlightElementsInView\r\t\t@ filter\r\t\t@ (RTShowLabelWhenZooming new\r\t\t\t\tconditionBlock: [ :aTrachelShape | aTrachelShape element isNil  ];\r\t\t\t\tscaleThreshold: 5)\t\t',			#stamp : 'AlexandreBergel 1/10/2019 14:19',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #buildView,			#protocol : #visualizations,			#sourceCode : 'buildView\r\t| filter |\r\tfilter := RTFilterInView new.\r\tfilter spawnBlock: [ :someElements | \r\t\t| umlModel |\r\t\tumlModel := UMLModel new.\r\t\t\r\t\tumlModel elements addAll: ((someElements reject: #hasNestedElements) collect: #model).\r\t\tumlModel packages addAll: ((someElements select: #hasNestedElements) collect: #model).\r\t\tumlModel roles addAll: (umlModel elements collect: #role as: Set) asArray.\r\t\tumlModel projectRootFilename: self projectRootFilename.\r\t\tumlModel\r\t].\r\t\r\t^ RTView new @ RTDraggableView @ RTHighlightElementsInView @ RTZoomableView\r\t\t@ filter\r\t\t@ (RTShowLabelWhenZooming new\r\t\t\t\tconditionBlock: [ :aTrachelShape | aTrachelShape element isNil  ];\r\t\t\t\tscaleThreshold: 5)\t\t',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.314107-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArch3In:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArch3In: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Arch3\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeLabeledTree ] ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArch3In:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArch3In: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Arch3\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeLabeledTree ] ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.316929-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArch3In:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorArch3In: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Arch3\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeLabeledTree ] ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArch3In:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArch3In: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Arch3\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeLabeledTree ] ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.319733-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchAsTreeMapIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArchAsTreeMapIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'ArchAsTreeMap\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeTree ] ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchAsTreeMapIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArchAsTreeMapIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'ArchAsTreeMap\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeTree ] ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.320668-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchAsTreeMapIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorArchAsTreeMapIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'ArchAsTreeMap\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeTree ] ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchAsTreeMapIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArchAsTreeMapIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'ArchAsTreeMap\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeTree ] ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.323323-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArchIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Arch\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeCircularTreeMap ] ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArchIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Arch\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeCircularTreeMap ] ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.324555-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorArchIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Arch\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeCircularTreeMap ] ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorArchIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorArchIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Arch\';\r\t\tinitializeView: [ arch ifNotNil: [ arch visualizeCircularTreeMap ] ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.327271-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorGraphIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorGraphIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Graph\';\r\t\tinitializeView: [ self visualizationGraph ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorGraphIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorGraphIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Graph\';\r\t\tinitializeView: [ self visualizationGraph ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.328106-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorGraphIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorGraphIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Graph\';\r\t\tinitializeView: [ self visualizationGraph ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorGraphIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorGraphIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Graph\';\r\t\tinitializeView: [ self visualizationGraph ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.330747-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorHierarchyIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorHierarchyIn: composite\r"\t<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Hierarchies\';\r\t\tinitializeView: [ self visualizationHierarchies ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorHierarchyIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorHierarchyIn: composite\r"\t<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Hierarchies\';\r\t\tinitializeView: [ self visualizationHierarchies ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.331554-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorHierarchyIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorHierarchyIn: composite\r"\t<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Hierarchies\';\r\t\tinitializeView: [ self visualizationHierarchies ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorHierarchyIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorHierarchyIn: composite\r"\t<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Hierarchies\';\r\t\tinitializeView: [ self visualizationHierarchies ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.335744-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorPackagesInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorPackagesInteractionIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Packages Interaction\';\r\t\tinitializeView: [ self visualizationPackageInteraction ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorPackagesInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorPackagesInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Packages Interaction\';\r\t\tinitializeView: [ self visualizationPackageInteraction ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.336747-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorPackagesInteractionIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorPackagesInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Packages Interaction\';\r\t\tinitializeView: [ self visualizationPackageInteraction ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorPackagesInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorPackagesInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Packages Interaction\';\r\t\tinitializeView: [ self visualizationPackageInteraction ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.339376-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionAndElementInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesDistributionAndElementInteractionIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist & Connections\';\r\t\tinitializeView: [ self visualizationRolesAndElementInteractionDistribution ]\r\t',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionAndElementInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesDistributionAndElementInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist & Connections\';\r\t\tinitializeView: [ self visualizationRolesAndElementInteractionDistribution ]\r\t',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.3402-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionAndElementInteractionIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorRolesDistributionAndElementInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist & Connections\';\r\t\tinitializeView: [ self visualizationRolesAndElementInteractionDistribution ]\r\t',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionAndElementInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesDistributionAndElementInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist & Connections\';\r\t\tinitializeView: [ self visualizationRolesAndElementInteractionDistribution ]\r\t',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.342824-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesDistributionIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist\';\r\t\tinitializeView: [ self visualizationRolesDistribution ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesDistributionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist\';\r\t\tinitializeView: [ self visualizationRolesDistribution ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.343672-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorRolesDistributionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist\';\r\t\tinitializeView: [ self visualizationRolesDistribution ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesDistributionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesDistributionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Dist\';\r\t\tinitializeView: [ self visualizationRolesDistribution ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.346402-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesInteractionIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'Roles Interaction\';\r\t\tinitializeView: [ self visualizationRoleInteraction ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Interaction\';\r\t\tinitializeView: [ self visualizationRoleInteraction ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.347221-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesInteractionIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorRolesInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Interaction\';\r\t\tinitializeView: [ self visualizationRoleInteraction ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorRolesInteractionIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorRolesInteractionIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'Roles Interaction\';\r\t\tinitializeView: [ self visualizationRoleInteraction ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.350237-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorTreeMapIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorTreeMapIn: composite\r\t<gtInspectorPresentationOrder: -10>\r\tcomposite roassal2\r\t\ttitle: \'TreeMap\';\r\t\tinitializeView: [ self visualizationTreeMap ]',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorTreeMapIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorTreeMapIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'TreeMap\';\r\t\tinitializeView: [ self visualizationTreeMap ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.35107-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorTreeMapIn:',			#protocol : #visualizations,			#sourceCode : 'gtInspectorTreeMapIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'TreeMap\';\r\t\tinitializeView: [ self visualizationTreeMap ]',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'gtInspectorTreeMapIn:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'gtInspectorTreeMapIn: composite\r\t"<gtInspectorPresentationOrder: -10>"\r\tcomposite roassal2\r\t\ttitle: \'TreeMap\';\r\t\tinitializeView: [ self visualizationTreeMap ]',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.353778-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationGraph,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationGraph\r\t| b alpha |\r\talpha := 0.3.\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape circle color: Color gray.\r\tb interaction highlightNeighbors: #allDependencies color: Color red.\r\tb nodes: self elements.\r\t\r\t"BLUE = DEPENDENCIES"\r\tb shape line color: (Color blue alpha: alpha). \r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #dependencies.\r\t\t\r\t"RED = INHERITANCE"\r\tb shape line color: (Color red alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #subclasses.\r\t\t\r\t"GREEN = IMPLEMENTATIONS"\r\tb shape line color: (Color green alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #implementations.\r\r\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationGraph,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationGraph\r\t| b alpha |\r\talpha := 0.3.\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape circle color: Color gray.\r\tb interaction highlightNeighbors: #allDependencies color: Color red.\r\tb nodes: self elements.\r\t\r\t"BLUE = DEPENDENCIES"\r\tb shape line color: (Color blue alpha: alpha). \r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #dependencies.\r\t\t\r\t"RED = INHERITANCE"\r\tb shape line color: (Color red alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #subclasses.\r\t\t\r\t"GREEN = IMPLEMENTATIONS"\r\tb shape line color: (Color green alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #implementations.\r\r\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.354746-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationGraph,			#protocol : #visualizations,			#sourceCode : 'visualizationGraph\r\t| b alpha |\r\talpha := 0.3.\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape circle color: Color gray.\r\tb interaction highlightNeighbors: #allDependencies color: Color red.\r\tb nodes: self elements.\r\t\r\t"BLUE = DEPENDENCIES"\r\tb shape line color: (Color blue alpha: alpha). \r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #dependencies.\r\t\t\r\t"RED = INHERITANCE"\r\tb shape line color: (Color red alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #subclasses.\r\t\t\r\t"GREEN = IMPLEMENTATIONS"\r\tb shape line color: (Color green alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #implementations.\r\r\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationGraph,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationGraph\r\t| b alpha |\r\talpha := 0.3.\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape circle color: Color gray.\r\tb interaction highlightNeighbors: #allDependencies color: Color red.\r\tb nodes: self elements.\r\t\r\t"BLUE = DEPENDENCIES"\r\tb shape line color: (Color blue alpha: alpha). \r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #dependencies.\r\t\t\r\t"RED = INHERITANCE"\r\tb shape line color: (Color red alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #subclasses.\r\t\t\r\t"GREEN = IMPLEMENTATIONS"\r\tb shape line color: (Color green alpha: alpha).\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: #implementations.\r\r\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.357353-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationHierarchies,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationHierarchies\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb nodes: self elements.\r\tb edges connectToAll: #subclasses.\r\tb layout tree; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationHierarchies,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationHierarchies\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb nodes: self elements.\r\tb edges connectToAll: #subclasses.\r\tb layout tree; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.358233-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationHierarchies,			#protocol : #visualizations,			#sourceCode : 'visualizationHierarchies\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb nodes: self elements.\r\tb edges connectToAll: #subclasses.\r\tb layout tree; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationHierarchies,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationHierarchies\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb nodes: self elements.\r\tb edges connectToAll: #subclasses.\r\tb layout tree; ifNotConnectedThen: RTGridLayout new.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.360964-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackageInteraction,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationPackageInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #packageName;\r\t\tcolor: Color veryDarkGray.\r\tb nodes: self packages.\r"\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ]."\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout circle.\r\tb view @ RTZoomableView.\r\t^ b',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackageInteraction,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationPackageInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #packageName;\r\t\tcolor: Color veryDarkGray.\r\tb nodes: self packages.\r"\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ]."\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout circle.\r\tb view @ RTZoomableView.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.361991-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackageInteraction,			#protocol : #visualizations,			#sourceCode : 'visualizationPackageInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #packageName;\r\t\tcolor: Color veryDarkGray.\r\tb nodes: self packages.\r"\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ]."\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout circle.\r\tb view @ RTZoomableView.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackageInteraction,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationPackageInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #packageName;\r\t\tcolor: Color veryDarkGray.\r\tb nodes: self packages.\r"\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ]."\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout circle.\r\tb view @ RTZoomableView.\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.364977-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackageInteraction2,			#protocol : #visualizations,			#sourceCode : 'visualizationPackageInteraction2\r\r\t| b lb colorMapping packagesElements someElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #mostRelevantPackageName.\r\t\r"\tb interaction \r\t\thighlightEdges: [ :r | r dependentPackages collect: #key ].\r"\t\r\tpackagesElements :=\r\tb nodes: self packages forEach: [ :p |\r\t\tb interaction showEdge connectToAll: #allDependencies; colorElement: [ :edge | edge to trachelShape color ].\r\t\tb shape box\r\t\t\t"withTextAbove; "\r\t\t\twidth: #numberOfAllDependencies;\r\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\t"b nodes: (p elements sortedAs: [ :el | el role roleName ])."\r\t\tsomeElements := b nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\tsomeElements @ (RTLabeled new center; fontSize: 1; color: Color black ; setAsShouldBeInTheFront).\r\t\tb shape line color: Color gray trans.\r\t\tb edges connectToAll: #allDependencies.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t].\r\r\tpackagesElements @ (RTHighlightable new \r\t\t\t\t\t\t\t\tshouldHighlightEdges; \r\t\t\t\t\t\t\t\tedgeColor: Color red; \r\t\t\t\t\t\t\t\tgetConnectedEdgesBlock: [ :anEl | \r\t\t\t\t\t\t\t\t\tanEl connectedEdges\r\t\t\t\t\t\t\t\t\t]).\r\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: (RTColorPalette diverging colors: 7 scheme: \'Spectral\').\r\tb layout circle.\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoRepetition;\r\t\tnoBidirectional;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout weightedCircle.\r\r\tb build.\r\t\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\tb view @ RTZoomableView.\r\t^ b view\r',			#stamp : 'AlexandreBergel 1/10/2019 12:10',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackageInteraction2,			#protocol : #visualizations,			#sourceCode : 'visualizationPackageInteraction2\r\r\t| b lb colorMapping packagesElements someElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #mostRelevantPackageName.\r\t\r"\tb interaction \r\t\thighlightEdges: [ :r | r dependentPackages collect: #key ].\r"\t\r\tpackagesElements :=\r\tb nodes: self packages forEach: [ :p |\r\t\tb interaction showEdge connectToAll: #allDependencies; colorElement: [ :edge | edge to trachelShape color ].\r\t\tb shape box\r\t\t\t"withTextAbove; "\r\t\t\twidth: #numberOfAllDependencies;\r\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\t"b nodes: (p elements sortedAs: [ :el | el role roleName ])."\r\t\tsomeElements := b nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\tsomeElements @ (RTLabeled new center; fontSize: 1; color: Color black ; setAsShouldBeInTheFront).\r\t\tb shape line color: Color gray trans.\r\t\tb edges connectToAll: #allDependencies.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t].\r\r\tpackagesElements @ (RTHighlightable new \r\t\t\t\t\t\t\t\tshouldHighlightEdges; \r\t\t\t\t\t\t\t\tedgeColor: Color red; \r\t\t\t\t\t\t\t\tgetConnectedEdgesBlock: [ :anEl | \r\t\t\t\t\t\t\t\t\tanEl connectedEdges\r\t\t\t\t\t\t\t\t\t]).\r\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: (RTColorPalette diverging colors: 7 scheme: \'Spectral\').\r\tb layout circle.\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoRepetition;\r\t\tnoBidirectional;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout weightedCircle.\r\r\tb build.\r\t\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\t^ b view\r',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.368835-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'visualizationPackageInteraction2WithLayers:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationPackageInteraction2WithLayers: layers\r\r\t| b lb colorMapping packagesElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\t\r"\tb interaction \r\t\thighlightEdges: [ :r | r dependentPackages collect: #key ].\r"\t\r\t\r\tpackagesElements := RTGroup new.\r\t\r\tb shape box withBorder; color: Color transparent.\r\tb nodes: layers forEach: [ :somePackages |\r\t\t| t |\r\t\tb shape box withTextAbove: #mostRelevantPackageName.\r\t\tt := \r\t\tb nodes: somePackages  forEach: [ :p |\r\t\t\tb interaction showEdge connectToAll: #allDependencies; colorElement: [ :edge | edge to trachelShape color ].\r\t\t\tb shape box \r\t\t\t\twidth: #numberOfAllDependencies;\r\t\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\t\tb nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\t\tb shape line color: Color gray trans.\r\t\t\tb edges connectToAll: #allDependencies.\r\t\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t\t].\r\t\tb layout horizontalLine.\r\t\tpackagesElements addAll: t.\r\t].\r\r\r\tpackagesElements @ (RTHighlightable new \r\t\t\t\t\t\t\t\tshouldHighlightEdges; \r\t\t\t\t\t\t\t\tedgeColor: Color red; \r\t\t\t\t\t\t\t\tgetConnectedEdgesBlock: [ :anEl | \r\t\t\t\t\t\t\t\t\tanEl connectedEdges\r\t\t\t\t\t\t\t\t\t]).\r\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: (RTColorPalette diverging colors: 7 scheme: \'Spectral\').\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoRepetition;\r\t\tnoBidirectional;\r\t\telements: packagesElements;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout verticalLine.\r\r\tb build.\r\t\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r"\tb view @ RTThresholdFilter."\r\t^ b view\r',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'visualizationPackageInteraction2WithLayers:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationPackageInteraction2WithLayers: layers\r\r\t| b lb colorMapping packagesElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\t\r"\tb interaction \r\t\thighlightEdges: [ :r | r dependentPackages collect: #key ].\r"\t\r\t\r\tpackagesElements := RTGroup new.\r\t\r\tb shape box withBorder; color: Color transparent.\r\tb nodes: layers forEach: [ :somePackages |\r\t\t| t |\r\t\tb shape box withTextAbove: #mostRelevantPackageName.\r\t\tt := \r\t\tb nodes: somePackages  forEach: [ :p |\r\t\t\tb interaction showEdge connectToAll: #allDependencies; colorElement: [ :edge | edge to trachelShape color ].\r\t\t\tb shape box \r\t\t\t\twidth: #numberOfAllDependencies;\r\t\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\t\tb nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\t\tb shape line color: Color gray trans.\r\t\t\tb edges connectToAll: #allDependencies.\r\t\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t\t].\r\t\tb layout horizontalLine.\r\t\tpackagesElements addAll: t.\r\t].\r\r\r\tpackagesElements @ (RTHighlightable new \r\t\t\t\t\t\t\t\tshouldHighlightEdges; \r\t\t\t\t\t\t\t\tedgeColor: Color red; \r\t\t\t\t\t\t\t\tgetConnectedEdgesBlock: [ :anEl | \r\t\t\t\t\t\t\t\t\tanEl connectedEdges\r\t\t\t\t\t\t\t\t\t]).\r\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: (RTColorPalette diverging colors: 7 scheme: \'Spectral\').\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoRepetition;\r\t\tnoBidirectional;\r\t\telements: packagesElements;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout verticalLine.\r\r\tb build.\r\t\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r"\tb view @ RTThresholdFilter."\r\t^ b view\r',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.370216-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'visualizationPackageInteraction2WithLayers:',			#protocol : #visualizations,			#sourceCode : 'visualizationPackageInteraction2WithLayers: layers\r\r\t| b lb colorMapping packagesElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\t\r"\tb interaction \r\t\thighlightEdges: [ :r | r dependentPackages collect: #key ].\r"\t\r\t\r\tpackagesElements := RTGroup new.\r\t\r\tb shape box withBorder; color: Color transparent.\r\tb nodes: layers forEach: [ :somePackages |\r\t\t| t |\r\t\tb shape box withTextAbove: #mostRelevantPackageName.\r\t\tt := \r\t\tb nodes: somePackages  forEach: [ :p |\r\t\t\tb interaction showEdge connectToAll: #allDependencies; colorElement: [ :edge | edge to trachelShape color ].\r\t\t\tb shape box \r\t\t\t\twidth: #numberOfAllDependencies;\r\t\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\t\tb nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\t\tb shape line color: Color gray trans.\r\t\t\tb edges connectToAll: #allDependencies.\r\t\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t\t].\r\t\tb layout horizontalLine.\r\t\tpackagesElements addAll: t.\r\t].\r\r\r\tpackagesElements @ (RTHighlightable new \r\t\t\t\t\t\t\t\tshouldHighlightEdges; \r\t\t\t\t\t\t\t\tedgeColor: Color red; \r\t\t\t\t\t\t\t\tgetConnectedEdgesBlock: [ :anEl | \r\t\t\t\t\t\t\t\t\tanEl connectedEdges\r\t\t\t\t\t\t\t\t\t]).\r\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: (RTColorPalette diverging colors: 7 scheme: \'Spectral\').\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoRepetition;\r\t\tnoBidirectional;\r\t\telements: packagesElements;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout verticalLine.\r\r\tb build.\r\t\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r"\tb view @ RTThresholdFilter."\r\t^ b view\r',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #'visualizationPackageInteraction2WithLayers:',			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationPackageInteraction2WithLayers: layers\r\r\t| b lb colorMapping packagesElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\t\r"\tb interaction \r\t\thighlightEdges: [ :r | r dependentPackages collect: #key ].\r"\t\r\t\r\tpackagesElements := RTGroup new.\r\t\r\tb shape box withBorder; color: Color transparent.\r\tb nodes: layers forEach: [ :somePackages |\r\t\t| t |\r\t\tb shape box withTextAbove: #mostRelevantPackageName.\r\t\tt := \r\t\tb nodes: somePackages  forEach: [ :p |\r\t\t\tb interaction showEdge connectToAll: #allDependencies; colorElement: [ :edge | edge to trachelShape color ].\r\t\t\tb shape box \r\t\t\t\twidth: #numberOfAllDependencies;\r\t\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\t\tb nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\t\tb shape line color: Color gray trans.\r\t\t\tb edges connectToAll: #allDependencies.\r\t\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t\t].\r\t\tb layout horizontalLine.\r\t\tpackagesElements addAll: t.\r\t].\r\r\r\tpackagesElements @ (RTHighlightable new \r\t\t\t\t\t\t\t\tshouldHighlightEdges; \r\t\t\t\t\t\t\t\tedgeColor: Color red; \r\t\t\t\t\t\t\t\tgetConnectedEdgesBlock: [ :anEl | \r\t\t\t\t\t\t\t\t\tanEl connectedEdges\r\t\t\t\t\t\t\t\t\t]).\r\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: (RTColorPalette diverging colors: 7 scheme: \'Spectral\').\r\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | anEdge from model numberOfRelationsWith: anEdge to model ];\r\t\twidthTo: [ :anEdge | anEdge to model numberOfRelationsWith: anEdge from model ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoRepetition;\r\t\tnoBidirectional;\r\t\telements: packagesElements;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout verticalLine.\r\r\tb build.\r\t\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r"\tb view @ RTThresholdFilter."\r\t^ b view\r',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.372899-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackages,			#protocol : #visualizations,			#sourceCode : 'visualizationPackages\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #mostRelevantPackageName.\r\tb nodes: self packages forEach: [ :p |\r\t\tb interaction highlightEdges: #allDependencies.\r\t\tb shape box \r\t\t\twidth: #numberOfAllDependencies;\r\t\t\theight: #numberOfAllIncomingDependencies.\r\t\tb nodes: (p elements sortedAs: [:el | el role asString ]).\r\t\t"b shape line color: Color gray trans.\r\t\tb edges connectToAll: #allDependencies.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new."\r\t\tb layout flow.\r\t].\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: self colorPalette.\r\tb layout flow.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\t\r\t^ b view',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationPackages,			#protocol : #visualizations,			#sourceCode : 'visualizationPackages\r\t| b lb colorMapping someElements |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #mostRelevantPackageName.\r\tb nodes: self packages forEach: [ :p |\r\t\tb interaction highlightEdges: #allDependencies.\r\t\tb shape box \r\t\t\twidth: #numberOfAllDependencies;\r\t\t\theight: #numberOfAllIncomingDependencies.\r\r\t\tsomeElements := b nodes: (p elements sortedAs: [ :el | el role roleName ]).\r\t\tsomeElements @ (RTLabeled new center; fontSize: 1; color: Color black ; setAsShouldBeInTheFront).\r\r\t\t"b nodes: (p elements sortedAs: [:el | el role asString ])."\r\t\t\r\t\t\r\t\t"b shape line color: Color gray trans.\r\t\tb edges connectToAll: #allDependencies.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new."\r\t\tb layout flow.\r\t].\r\tcolorMapping := b normalizer \r\t\tobjects: self elements;\r\t\tdistinctColorUsing: #role colorPalette: self colorPalette.\r\tb layout flow.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize packages and their inner dependencies\'.\r\tlb addText: \'Encapsulating box = package\'.\r\tlb addText: \'Inner box = class\'.\r\tlb addText: \'Color of small box = role\'.\r\tlb addText: \'Height inner box = #incoming dependencies\'.\r\tlb addText: \'Width inner box = #outgoing dependencies\'.\r\tlb addText: \'Edges = dependencies scoped in the package\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.375726-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRoleInteraction,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRoleInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #roleName;\r\t\tcolor: Color veryDarkGray.\r\t\t\r\tb interaction highlightEdges: [ :r | r interactingRoles collect: #key ].\r\tb nodes: self roles.\r\t\r"\tb interaction popupText: [ :edge | edge model from numberOfRelationsWith: edge model to ].\r\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r"\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | (anEdge from model numberOfRelationsWith: anEdge to model) / 10 ];\r\t\twidthTo: [ :anEdge | (anEdge to model numberOfRelationsWith: anEdge from model) / 10 ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r\r\tb layout circle.\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ].\r\t^ b',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRoleInteraction,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRoleInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #roleName;\r\t\tcolor: Color veryDarkGray.\r\t\t\r\tb interaction highlightEdges: [ :r | r interactingRoles collect: #key ].\r\tb nodes: self roles.\r\t\r"\tb interaction popupText: [ :edge | edge model from numberOfRelationsWith: edge model to ].\r\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r"\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | (anEdge from model numberOfRelationsWith: anEdge to model) / 10 ];\r\t\twidthTo: [ :anEdge | (anEdge to model numberOfRelationsWith: anEdge from model) / 10 ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r\r\tb layout circle.\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ].\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.37714-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRoleInteraction,			#protocol : #visualizations,			#sourceCode : 'visualizationRoleInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #roleName;\r\t\tcolor: Color veryDarkGray.\r\t\t\r\tb interaction highlightEdges: [ :r | r interactingRoles collect: #key ].\r\tb nodes: self roles.\r\t\r"\tb interaction popupText: [ :edge | edge model from numberOfRelationsWith: edge model to ].\r\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r"\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | (anEdge from model numberOfRelationsWith: anEdge to model) / 10 ];\r\t\twidthTo: [ :anEdge | (anEdge to model numberOfRelationsWith: anEdge from model) / 10 ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r\r\tb layout circle.\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ].\r\t^ b',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRoleInteraction,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRoleInteraction\r\t| b |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape label\r\t\ttext: #roleName;\r\t\tcolor: Color veryDarkGray.\r\t\t\r\tb interaction highlightEdges: [ :r | r interactingRoles collect: #key ].\r\tb nodes: self roles.\r\t\r"\tb interaction popupText: [ :edge | edge model from numberOfRelationsWith: edge model to ].\r\tb shape line color: Color blue trans.\r\tb edges\r\t\tmoveBehind;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r"\r\tb shape lineDualWidth \r\t\twithShorterDistanceAttachPoint;\r\t\tcolor: Color blue trans;\r\t\twidthFrom: [ :anEdge | (anEdge from model numberOfRelationsWith: anEdge to model) / 10 ];\r\t\twidthTo: [ :anEdge | (anEdge to model numberOfRelationsWith: anEdge from model) / 10 ].\r\tb edges\r\t\tmoveBehind;\r\t\tnoBidirectional; noRepetition;\r\t\tconnectToAll: [ :r | r interactingRoles collect: #key ].\r\r\tb layout circle.\r\tb normalizer normalizeLineWidth: [ :from :to | from numberOfRelationsWith: to ].\r\t^ b',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.379934-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesAndElementInteractionDistribution,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRolesAndElementInteractionDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\t| someElements |\r\t\tsomeElements := b nodes: r elements.\r\t\tb edges connectToAll: #allDependencies.\r\t\tsomeElements pushFront.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesAndElementInteractionDistribution,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRolesAndElementInteractionDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\t| someElements |\r\t\tsomeElements := b nodes: r elements.\r\t\tb edges connectToAll: #allDependencies.\r\t\tsomeElements pushFront.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.381427-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesAndElementInteractionDistribution,			#protocol : #visualizations,			#sourceCode : 'visualizationRolesAndElementInteractionDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\t| someElements |\r\t\tsomeElements := b nodes: r elements.\r\t\tb edges connectToAll: #allDependencies.\r\t\tsomeElements pushFront.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesAndElementInteractionDistribution,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRolesAndElementInteractionDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\t| someElements |\r\t\tsomeElements := b nodes: r elements.\r\t\tb edges connectToAll: #allDependencies.\r\t\tsomeElements pushFront.\r\t\tb layout force; ifNotConnectedThen: RTGridLayout new.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb onDemand.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.384054-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesDistribution,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRolesDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\tb nodes: (r elements sortedAs: [ :e | e class name size ]).\r\t\tb layout grid.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb right.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesDistribution,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRolesDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\tb nodes: (r elements sortedAs: [ :e | e class name size ]).\r\t\tb layout grid.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb right.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.385081-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesDistribution,			#protocol : #visualizations,			#sourceCode : 'visualizationRolesDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\tb nodes: (r elements sortedAs: [ :e | e class name size ]).\r\t\tb layout grid.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb right.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationRolesDistribution,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationRolesDistribution\r\t| b lb colorMapping |\r\tb := RTMondrian new.\r\tb view: self buildView.\r\tb shape box withTextAbove: #roleName.\r\tb nodes: self roles forEach: [ :r |\r\t\tb nodes: (r elements sortedAs: [ :e | e class name size ]).\r\t\tb layout grid.\r\t].\r\tb layout flow.\r\tcolorMapping := b normalizer\r\t\tobjects: self elements; \r\t\tdistinctColorUsing: #class colorPalette: self colorPalette.\r\tb build.\r\t\r\tlb := RTLegendBuilder new.\r\tlb right.\r\tlb view: b view.\r\tlb addText: \'Visualize roles and the elements their representation in the code\'.\r\tlb addText: \'Large box = role\'.\r\tlb addText: \'Small box = class|enum|interface|abstract class\'.\r\tlb addText: \'Color of small box = role\'.\r\tcolorMapping do: [ :assoc |\r\t\tlb addColor: assoc value text: assoc key asString ].\r\tlb build.\r\r\t\r\t^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.387901-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationTreeMap,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationTreeMap\r\t| b shape label hb |\r\tb := RTTreeMapBuilder new.\r\tb view: self buildView.\r\tb extent: 1000@1000.\r\tb shape fillColor: [ :pak | Color random ].\r\t\r\tb from: packages  using: [#()].\r\tb depthShadedBorder.\r\tb weight: #numberOfElements.\r\rshape := RTLabel new "text: #mostRelevantPackageName".\rb build.\rb elements \r    select: [ :el | (el attributes at: #elements) isEmpty ]\r    thenDo: [ :el | \r        label := shape elementOn: el model mostRelevantPackageName.\r        label trachelShape scaleBy: el extent y / label extent y / 8.\r        \r        (RTConstraint movable: label fix: el)\r                inner; stick.\r            b view add: label ].\r\r"Add the highlighter"\r\troles ifNotNil: [\r\t\thb := RTHighlighterBuilder new.\r\t\thb fontSize: 30.\r\t\thb view: b view.\r\t\thb filter: [ :obj | obj class == UMLPackage ].\r\t\tself roles do: [ :aRole | \r\t\t\thb \r\t\t\t\taddEntry: [ :package | package elements anySatisfy: [ :ee | ee role == aRole ] ] \r\t\t\t\tnamed: aRole roleName\r\t\t\t\thighlightColor: [ :aPack | Color r: (aPack elements select: [ :ee | ee role == aRole ]) size / aPack numberOfElements g: 0 b: 0 ]\r\t\t\t\tdefaultColor: Color veryDarkGray.\r\t\t].\r\t\thb build.\r\t].\r^ b view',			#stamp : 'CompatibleUserName 1/1/2019 23:14:56',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationTreeMap,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationTreeMap\r\t| b shape label hb |\r\tb := RTTreeMapBuilder new.\r\tb view: self buildView.\r\tb extent: 1000@1000.\r\tb shape fillColor: [ :pak | Color random ].\r\t\r\tb from: packages  using: [#()].\r\tb depthShadedBorder.\r\tb weight: #numberOfElements.\r\rshape := RTLabel new "text: #mostRelevantPackageName".\rb build.\rb elements \r    select: [ :el | (el attributes at: #elements) isEmpty ]\r    thenDo: [ :el | \r        label := shape elementOn: el model mostRelevantPackageName.\r        label trachelShape scaleBy: el extent y / label extent y / 8.\r        \r        (RTConstraint movable: label fix: el)\r                inner; stick.\r            b view add: label ].\r\r"Add the highlighter"\r\troles ifNotNil: [\r\t\thb := RTHighlighterBuilder new.\r\t\thb fontSize: 30.\r\t\thb view: b view.\r\t\thb filter: [ :obj | obj class == UMLPackage ].\r\t\tself roles do: [ :aRole | \r\t\t\thb \r\t\t\t\taddEntry: [ :package | package elements anySatisfy: [ :ee | ee role == aRole ] ] \r\t\t\t\tnamed: aRole roleName\r\t\t\t\thighlightColor: [ :aPack | Color r: (aPack elements select: [ :ee | ee role == aRole ]) size / aPack numberOfElements g: 0 b: 0 ]\r\t\t\t\tdefaultColor: Color veryDarkGray.\r\t\t].\r\t\thb build.\r\t].\r^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:00.389016-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationTreeMap,			#protocol : #visualizations,			#sourceCode : 'visualizationTreeMap\r\t| b shape label hb |\r\tb := RTTreeMapBuilder new.\r\tb view: self buildView.\r\tb extent: 1000@1000.\r\tb shape fillColor: [ :pak | Color random ].\r\t\r\tb from: packages  using: [#()].\r\tb depthShadedBorder.\r\tb weight: #numberOfElements.\r\rshape := RTLabel new "text: #mostRelevantPackageName".\rb build.\rb elements \r    select: [ :el | (el attributes at: #elements) isEmpty ]\r    thenDo: [ :el | \r        label := shape elementOn: el model mostRelevantPackageName.\r        label trachelShape scaleBy: el extent y / label extent y / 8.\r        \r        (RTConstraint movable: label fix: el)\r                inner; stick.\r            b view add: label ].\r\r"Add the highlighter"\r\troles ifNotNil: [\r\t\thb := RTHighlighterBuilder new.\r\t\thb fontSize: 30.\r\t\thb view: b view.\r\t\thb filter: [ :obj | obj class == UMLPackage ].\r\t\tself roles do: [ :aRole | \r\t\t\thb \r\t\t\t\taddEntry: [ :package | package elements anySatisfy: [ :ee | ee role == aRole ] ] \r\t\t\t\tnamed: aRole roleName\r\t\t\t\thighlightColor: [ :aPack | Color r: (aPack elements select: [ :ee | ee role == aRole ]) size / aPack numberOfElements g: 0 b: 0 ]\r\t\t\t\tdefaultColor: Color veryDarkGray.\r\t\t].\r\t\thb build.\r\t].\r^ b view',			#stamp : '',			#package : #UMLDependencies		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #UMLModel			},			#name : #visualizationTreeMap,			#protocol : #'visualizations - obsolete',			#sourceCode : 'visualizationTreeMap\r\t| b shape label hb |\r\tb := RTTreeMapBuilder new.\r\tb view: self buildView.\r\tb extent: 1000@1000.\r\tb shape fillColor: [ :pak | Color random ].\r\t\r\tb from: packages  using: [#()].\r\tb depthShadedBorder.\r\tb weight: #numberOfElements.\r\rshape := RTLabel new "text: #mostRelevantPackageName".\rb build.\rb elements \r    select: [ :el | (el attributes at: #elements) isEmpty ]\r    thenDo: [ :el | \r        label := shape elementOn: el model mostRelevantPackageName.\r        label trachelShape scaleBy: el extent y / label extent y / 8.\r        \r        (RTConstraint movable: label fix: el)\r                inner; stick.\r            b view add: label ].\r\r"Add the highlighter"\r\troles ifNotNil: [\r\t\thb := RTHighlighterBuilder new.\r\t\thb fontSize: 30.\r\t\thb view: b view.\r\t\thb filter: [ :obj | obj class == UMLPackage ].\r\t\tself roles do: [ :aRole | \r\t\t\thb \r\t\t\t\taddEntry: [ :package | package elements anySatisfy: [ :ee | ee role == aRole ] ] \r\t\t\t\tnamed: aRole roleName\r\t\t\t\thighlightColor: [ :aPack | Color r: (aPack elements select: [ :ee | ee role == aRole ]) size / aPack numberOfElements g: 0 b: 0 ]\r\t\t\t\tdefaultColor: Color veryDarkGray.\r\t\t].\r\t\thb build.\r\t].\r^ b view',			#stamp : '',			#package : #UMLDependencies		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:33.713111-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'Roassal2-Tests-CompatibleUserName.1547665984',		#repositoryDescription : '/Users/alexandrebergel/Dropbox/GitRepos/UMLDependencies/Bundles/UMLVisualization/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:37.843123-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'Roassal2-CompatibleUserName.1547665984',		#repositoryDescription : '/Users/alexandrebergel/Dropbox/GitRepos/UMLDependencies/Bundles/UMLVisualization/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:16:41.61513-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'Trachel-CompatibleUserName.1547665984',		#repositoryDescription : '/Users/alexandrebergel/Dropbox/GitRepos/UMLDependencies/Bundles/UMLVisualization/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:18:02.805474-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #TRCanvasTest			},			#name : #testFixedShapes,			#protocol : #'fixed shape',			#sourceCode : 'testFixedShapes\r\r\t| s1 s2 |\r\ts1 := TRBoxShape new from: 10 @ 20 extent: 50 @ 40.\r\ts2 := TRBoxShape new from: 10 @ 20 extent: 50 @ 40.\r\tcanvas addShape: s1; addShape: s2.\r\t\r\tself assert: s1 isNotFixed.\r\tself assert: s2 isNotFixed.\r\t\r\ts2 setAsFixed.\r\tself assert: s1 isNotFixed.\r\tself deny: s2 isNotFixed.\r\t\r\ts2 setAsNotFixed.\r\tself assert: s1 isNotFixed.\r\tself assert: s2 isNotFixed.\r',			#stamp : '',			#package : #Trachel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #TRCanvasTest			},			#name : #testFixedShapes,			#protocol : #'fixed shape',			#sourceCode : 'testFixedShapes\r\t| tmp1 tmp2 tmp4 |\r\ttmp1 := TRBoxShape new from: 10 @ 20 extent: 50 @ 40.\r\ttmp2 := TRBoxShape new from: 10 @ 20 extent: 50 @ 40.\r\ttmp4 := canvas.\r\ttmp4\r\t\taddShape: tmp1;\r\t\taddShape: tmp2.\r\tself\r\t\tdeny: tmp1 isFixed;\r\t\tassert: tmp1 isNotFixed;\r\t\tdeny: tmp2 isFixed;\r\t\tassert: tmp2 isNotFixed.\r\ttmp2 setAsFixed.\r\tself\r\t\tdeny: tmp1 isFixed;\r\t\tassert: tmp1 isNotFixed;\r\t\tassert: tmp2 isFixed;\r\t\tdeny: tmp2 isNotFixed.\r\ttmp2 setAsNotFixed.\r\tself\r\t\tdeny: tmp1 isFixed;\r\t\tassert: tmp1 isNotFixed;\r\t\tdeny: tmp2 isFixed;\r\t\tassert: tmp2 isNotFixed',			#stamp : '',			#package : #Trachel		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:18:02.882095-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #RTFilterInViewTest			},			#name : #testWithFixedShape,			#protocol : #tests,			#sourceCode : 'testWithFixedShape\r\t| tmp1 tmp3 |\r\ttmp3 := RTLabel new elementOn: \'hello\'.\r\ttmp3 setAsFixed.\r\ttmp1 := tmp3 yourself.\r\tview add: tmp1.\r\tself deny: (filter elementsToBeInspected includes: tmp1)',			#stamp : '',			#package : #Roassal2-Tests		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:18:02.961859-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #RTFilterInView			},			#name : #elementsToBeInspected,			#protocol : #'private - action',			#sourceCode : 'elementsToBeInspected\r\t^ view elements\r\t\tselect: [ :arg1 | \r\t\t\targ1 trachelShape isMarkedAsVisible\r\t\t\t\tand: [ arg1 trachelShape isFixed not ] ]',			#stamp : '',			#package : #Roassal2		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-16T16:18:03.043827-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #RTFilterInView			},			#name : #inspectMarkedVisibleElements,			#protocol : #'private - action',			#sourceCode : 'inspectMarkedVisibleElements\r\t| elements |\r\telements := view elements select: [ :e | e trachelShape isMarkedAsVisible ].\r\t(spawnBlock rtValue: elements) inspect',			#stamp : 'AlexandreBergel 1/10/2019 13:02',			#package : #Roassal2		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #RTFilterInView			},			#name : #inspectMarkedVisibleElements,			#protocol : #'private - action',			#sourceCode : 'inspectMarkedVisibleElements\r\t| tmp1 |\r\ttmp1 := self elementsToBeInspected.\r\t(spawnBlock rtValue: tmp1) inspect',			#stamp : '',			#package : #Roassal2		}	}}