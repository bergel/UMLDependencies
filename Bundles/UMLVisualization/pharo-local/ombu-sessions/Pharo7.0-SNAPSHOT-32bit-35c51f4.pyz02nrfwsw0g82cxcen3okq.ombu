OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-22T16:09:08.034884-03:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-35c51f4.726dzap81100lnjp223qq8phl', '47' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #TRCanvasTest			},			#name : #testFixedShapes,			#protocol : #'fixed shape',			#sourceCode : 'epetition;\r\t\tconnectToAll: [ :r | r dependentPackages collect: #key ].\r\tb layout circle.\r\tb view @ RTZoomableView.\r\t^ b',			#stamp : '',			#package : #Trachel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #TRCanvasTest			},			#name : #testFixedShapes,			#protocol : #'fixed shape',			#sourceCode : 'testFixedShapes\r\r\t| s1 s2 |\r\ts1 := TRBoxShape new from: 10 @ 20 extent: 50 @ 40.\r\ts2 := TRBoxShape new from: 10 @ 20 extent: 50 @ 40.\r\tcanvas addShape: s1; addShape: s2.\r\t\r\tself deny: s1 isFixed.\r\tself assert: s1 isNotFixed.\r\tself deny: s2 isFixed.\r\tself assert: s2 isNotFixed.\r\t\r\ts2 setAsFixed.\r\tself deny: s1 isFixed.\r\tself assert: s1 isNotFixed.\r\tself assert: s2 isFixed.\r\tself deny: s2 isNotFixed.\r\t\r\ts2 setAsNotFixed.\r\tself deny: s1 isFixed.\r\tself assert: s1 isNotFixed.\r\tself deny: s2 isFixed.\r\tself assert: s2 isNotFixed.\r',			#stamp : '',			#package : #Trachel		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-01-22T16:09:08.050173-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #TRMorph			},			#name : #reset,			#protocol : #initialization,			#sourceCode : 'reset\r\t"This method is useful in case some references of TRMorph cannot be garbage collected, as it may happen with GT."\r\tself class instVarNames do: [ :n | self instVarNamed: n put: nil ]',			#stamp : '',			#package : #Trachel		}	}}